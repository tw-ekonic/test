{"remainingRequest":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/src/App.vue?vue&type=style&index=0&id=2aa24578&lang=css","dependencies":[{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/src/App.vue","mtime":1642703906255},{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNhcHAgewogIGZvbnQtZmFtaWx5OiAiTW9udHNlcnJhdCI7Cn0K"},{"version":3,"sources":["/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/src/App.vue"],"names":[],"mappings":";AAkMA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B","file":"/home/tom/WebstormProjects/uni/buju-projekt/buju-frontend/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"w-10/12 m-auto my-20\">\n    <div class=\"flex justify-between flex-row flex-wrap\">\n      <StudentsTable class=\"w-5/12\"\n                     v-bind:on-input-change=\"onInputChange\"\n                     v-bind:delete-student=\"deleteStudent\"\n                     v-bind:students=\"students\"\n                     v-bind:on-submit=\"onSubmit\"\n                     v-bind:studentName=\"studentName\"\n                     v-bind:toggle-modal=\"openModal\"\n                     v-bind:on-search=\"onSearch\"\n      />\n      <StationsTable class=\"w-5/12\"\n                     v-bind:on-input-change=\"onInputChange\"\n                     v-bind:delete-station=\"deleteStation\"\n                     v-bind:stations=\"stations\"\n                     v-bind:on-submit=\"onSubmit\"\n                     v-bind:stationName=\"stationName\"\n                     v-bind:toggle-modal=\"openModal\"\n                     v-bind:on-search=\"onSearch\"\n                     v-bind:selected-station-value=\"selectedStationValue\"\n                     v-bind:select-station-value=\"selectStationValue\"\n      />\n    </div>\n    <ResultsTable\n                  v-bind:stations=\"stations\"\n                  v-bind:students=\"students\"\n                  v-bind:results=\"results\"\n                  v-bind:resultName=\"resultName\"\n                  v-bind:on-result-submit=\"onResultSubmit\"\n                  v-bind:on-input-change=\"onInputChange\"\n                  v-bind:delete-result=\"deleteResult\"\n    />\n    <Modal\n        v-if=\"showModal\"\n        v-bind:close-modal=\"closeModal\"\n        v-bind:modal-object=\"modalData\"\n        v-bind:save=\"patchValue\"\n    />\n  </div>\n</template>\n\n<script>\n\nimport StationsTable from \"@/components/StationsTable\"\nimport StudentsTable from \"@/components/StudentsTable\";\nimport ResultsTable from \"@/components/ResultsTable\";\nimport Modal from \"@/components/Modal\";\n\nconst axios = require(\"axios\");\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      stations: [],\n      allStations: [],\n      stationName: '',\n      selectedStationValue: '',\n      students: [],\n      allStudents: [],\n      studentName: '',\n      results: [],\n      resultName: '',\n      showModal: false,\n      modalData: {\n        data: '',\n        label: '',\n        placeholder: '',\n        endpoint: '',\n        type: '',\n      },\n    }\n  },\n  mounted() {\n    axios.get(\"http://localhost:3000/users\")\n        .then((students) => {\n          this.students = students.data.users;\n          this.allStudents = this.students;\n        })\n        .catch((e) => console.log(e));\n    axios.get(\"http://localhost:3000/stations\")\n        .then((stations) => {\n          this.stations = stations.data.stations;\n          this.allStations = this.stations;\n        })\n        .catch((e) => console.log(e));\n    axios.get(\"http://localhost:3000/scores\")\n        .then((results) => {\n          this.results = results.data.scores;\n          console.log(this.results);\n        })\n        .catch((e) => console.log(e));\n  },\n  methods: {\n    onInputChange(e, value) {\n      this[value] = e.target.value;\n    },\n    onSubmit(endpoint, name, type) {\n      if (endpoint === \"stations\" && this[name].length) {\n        axios.post(`http://localhost:3000/${endpoint}`, {\n          name: this[name],\n          value: this.selectedStationValue,\n        })\n            .then(() => {\n              this[name] = '';\n              axios.get(`http://localhost:3000/${ endpoint }`)\n                  .then((data) => this[type] = data.data[endpoint]);\n            })\n      }\n      else if (this[name].length) {\n        axios.post(`http://localhost:3000/${endpoint}`, {\n          name: this[name],\n        })\n            .then(() => {\n              this[name] = '';\n              axios.get(`http://localhost:3000/${ endpoint }`)\n                  .then((data) => this[type] = data.data[endpoint]);\n            })\n      }\n    },\n    selectStationValue(e) {\n      this.selectedStationValue = e.target.value;\n    },\n    onResultSubmit(result) {\n      axios.post(`http://localhost:3000/scores`, {\n        user_id: result.student,\n        station_id: result.station,\n        score: result.result,\n      }).then(() => {\n        axios.get(\"http://localhost:3000/scores\")\n            .then((results) => {\n              this.results = results.data.scores;\n            })\n            .catch((e) => console.log(e));\n      })\n    },\n    deleteResult(id) {\n      axios.delete(`http://localhost:3000/scores/${id}`)\n          .then((results) => {\n            this.results = results.data.scores;\n            console.log(this.results);\n          })\n          .catch((e) => console.log(e));\n    },\n    deleteStation(id) {\n      axios.delete(`http://localhost:3000/stations/${id}`)\n          .then((data) => this.stations = data.data.stations);\n    },\n    deleteStudent(id) {\n      axios.delete(`http://localhost:3000/users/${id}`)\n          .then((data) => this.students = data.data.users);\n    },\n    openModal(data, label, placeholder, endpoint, type) {\n      this.modalData = {\n        data,\n        label,\n        placeholder,\n        endpoint,\n        type\n      }\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    patchValue(id, newValue, endpoint, type, selectedStationValue) {\n      if (newValue.length && endpoint === \"stations\") {\n        axios.patch(`http://localhost:3000/${endpoint}/${id}`, {\n          name: newValue,\n          value: selectedStationValue\n        }).then((data) => this[type] = data.data[endpoint])\n      }\n      else if (newValue.length) {\n        axios.patch(`http://localhost:3000/${endpoint}/${id}`, {\n          name: newValue,\n        }).then((data) => this[type] = data.data[endpoint])\n      }\n      this.closeModal();\n    },\n    onSearch(type, allType, e) {\n      this[type] = this[allType].filter((data) => data.name.toUpperCase().includes(e.target.value.toUpperCase()));\n    }\n  },\n  components: {\n    StationsTable,\n    StudentsTable,\n    ResultsTable,\n    Modal\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: \"Montserrat\";\n}\n</style>\n"]}]}